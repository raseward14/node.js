middleware is anything btw req and res to .next() is really middleware (route handler)

3 TYPES: 
1. built in middleware
--app.use()
--just like http methods (.get() .put() .post() .delete()), works as a waterfall
--built in middleware does not need the next() called, its already built in
2. custom middleware (we create ourselves)
--custom logger
3. middleware from 3rd parties
--cors

npm i cors
const cors = require('cors'); in server.js
come as soon as possible
if you are using open to to public, this is fine - public API
can create a whitelist of domains - array
-whatever your .com is, whatever web application domain that will access this backend node server
-to include a live server (go live in the bottom right corner of vsCode)
-http://127.0.0.1:5500
-the 5500 is the port - maybe as I am building my react app, I am running in on this port, 5500, or a diff port on localhost
-IP address 127.0.0.1 is the same as having localhost there 
-can take out the localhost domains after development, leave in whatever domains should be able to access data

this is the allow list that cors will not prevent
need to create function that checks to see if the request is coming from one of the allowed domains
all containted within the corsOptions
-origin takes an anonymous funtion, and an origin